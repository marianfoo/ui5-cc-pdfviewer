/*
* ! {copyright}
*/
sap.ui.define(["sap/base/util/merge","sap/ui/core/util/reflection/JsControlTreeModifier"],function(e,t){"use strict";var r={};r.enhanceConfig=function(n,a){var i=a.propertyBag;var o=i?i.modifier:t;var g;var u;return o.getControlMetadata(n).then(function(e){g=e;a.controlMetadata=g;return o.getAggregation(n,"customData")}).then(function(e){return Promise.all(e.map(function(e){return o.getProperty(e,"key")})).then(function(t){return e.reduce(function(e,r,n){return t[n]==="xConfig"?r:e},undefined)})}).then(function(t){u=t;if(u){return o.getProperty(u,"value").then(function(t){return e({},JSON.parse(t.replace(/\\/g,"")))})}return{aggregations:{}}}).then(function(t){var g=r.createConfigObject(n,a,t);var f=i?i.appComponent:undefined;var c=Promise.resolve();if(u&&n.isA){c=o.removeAggregation(n,"customData",u).then(function(){return o.destroy(u)})}return c.then(function(){return o.createAndAddCustomData(n,"xConfig",JSON.stringify(g),f).then(function(){return e({},g)})})})};r.readConfig=function(r,n){var a,i;if(n){var o=n.propertyBag?n.propertyBag.modifier:t;return o.getAggregation(r,"customData").then(function(e){return Promise.all(e.map(function(e){return o.getProperty(e,"key")})).then(function(t){return e.reduce(function(e,r,n){return t[n]==="xConfig"?r:e},undefined)})}).then(function(t){if(t){return o.getProperty(t,"value").then(function(t){return e({},JSON.parse(t.replace(/\\/g,"")))})}return null})}var g=function(e,t){var r=function(e,t){if(e){if(e.getMetadata){var r=e.getMetadata();var n=r.getAllAggregations();if(n){return n[t]}}}return undefined};var n=r(e,t);if(n){return e[n._sGetter]()}return undefined};var u=function(e,t){var r=e.getMetadata().getPropertyLikeSetting(t);if(r){var n=r._sGetter;return e[n]()}return undefined};i=g(r,"customData").find(function(e){return u(e,"key")=="xConfig"});a=i?e({},JSON.parse(u(i,"value").replace(/\\/g,""))):null;return a};r.createConfigObject=function(e,t,r){var n=t.name;var a=t.controlMeta;var i=a.property;var o=t.value;var g=t.controlMetadata||e.getMetadata();var u=a.aggregation;var f=u?u:g.getDefaultAggregation().name;var c=r||{aggregations:{}};if(!c.aggregations.hasOwnProperty(f)){if(g.hasAggregation(f)){c.aggregations[f]={}}else{throw new Error("The aggregation "+f+" does not exist for"+e)}}if(!c.aggregations.hasOwnProperty(n)){c.aggregations[f][n]={}}if(o!==null){c.aggregations[f][n][i]=o}else{delete c.aggregations[f][n][i];if(Object.keys(c.aggregations[f][n]).length===0){delete c.aggregations[f][n];if(Object.keys(c.aggregations[f]).length===0){delete c.aggregations[f]}}}return c};return r});
//# sourceMappingURL=xConfigAPI.js.map