<core:FragmentDefinition xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
						 xmlns="sap.m" xmlns:core="sap.ui.core" xmlns:l="sap.ui.layout"
						 xmlns:smartlink="sap.ui.comp.navpopover"
						 xmlns:sfi="sap.ui.comp.smartfield" xmlns:uxap="sap.uxap" xmlns:build="sap.build"
						 template:require="{ AH: 'sap/suite/ui/generic/template/js/AnnotationHelper'}">
	

			<template:if test="{= !${parameter>/settings/simpleHeaderFacets} }">
				<template:with path="parameter>/manifest/sap.ui5/extends/extensions/sap.ui.viewExtensions/sap.suite.ui.generic.template.ObjectPage.view.Details"
								var="manifestViewExtensions">
					<template:if test="{entityType>com.sap.vocabularies.UI.v1.HeaderInfo/ImageUrl}">
						<template:then>
							<Avatar id="objectImage"
								tooltip="{_templPriv>/objectPage/headerInfo/objectTitle}"
								src="{parts:[{path: 'entityType>com.sap.vocabularies.UI.v1.HeaderInfo/ImageUrl'}, {path: 'parameter>/appComponentName'}, {value: true}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.formatImageUrl'}"
								displaySize="L"
								displayShape="Square"
								press="._templateEventHandlers.onHeaderImagePress"
								initials="{path: 'entityType>com.sap.vocabularies.UI.v1.HeaderInfo/Initials', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getAvatarInitials'}"
								fallbackIcon="{parts:[{path: 'entityType>com.sap.vocabularies.UI.v1.HeaderInfo/TypeImageUrl'}, {path: 'parameter>/appComponentName'}, {value: true}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.formatImageUrl'}"
								class="sapUxAPObjectPageHeaderObjectImage sapSmartTemplatesObjectPageHeaderAvatar"/>
							<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointAfterImageExists' }">
								<VBox id="AfterImageExtensionFacet::objectImage">
									<core:ExtensionPoint name="AfterImageExtensionFacet|{entitySet>name}"/>
								</VBox>
							</template:if>
						</template:then>
						<template:elseif test="{entityType>com.sap.vocabularies.UI.v1.HeaderInfo/TypeImageUrl}">
							<Avatar id="objectTypeImage"
								tooltip="{_templPriv>/objectPage/headerInfo/objectTitle}"
								src="{parts:[{path: 'entityType>com.sap.vocabularies.UI.v1.HeaderInfo/TypeImageUrl'}, {path: 'parameter>/appComponentName'}, {value: true}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.formatImageUrl'}"
								displaySize="L"
								displayShape="Square"
								initials="{path: 'entityType>com.sap.vocabularies.UI.v1.HeaderInfo/Initials', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getAvatarInitials'}"
								class="sapUxAPObjectPageHeaderObjectImage sapSmartTemplatesObjectPageHeaderAvatar"/>
							<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointAfterImageExists' }">
								<VBox id="AfterImageExtensionFacet::objectTypeImage">
									<core:ExtensionPoint name="AfterImageExtensionFacet|{entitySet>name}"/>
								</VBox>
							</template:if>
						</template:elseif>
						<template:elseif test="{= ${entityType>com.sap.vocabularies.UI.v1.HeaderInfo/Initials}}"	>
									<Avatar id="{:= ${parameter>/stableId}.getStableId({type: 'ObjectPageHeader', subType: 'InitialsAvatar'})}"
										tooltip="{_templPriv>/objectPage/headerInfo/objectTitle}"
										displaySize="L"
										displayShape="Square"
										class="sapUxAPObjectPageHeaderObjectImage sapSmartTemplatesObjectPageHeaderAvatar"
										initials="{path: 'entityType>com.sap.vocabularies.UI.v1.HeaderInfo/Initials', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getAvatarInitials'}" />
							<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointAfterImageExists' }">
								<VBox id="AfterImageExtensionFacet::objectTypeImage">
									<core:ExtensionPoint name="AfterImageExtensionFacet|{entitySet>name}"/>
								</VBox>
							</template:if>
						</template:elseif>
						<template:else>
							<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointNoImageExists' }">
						<!-- 	Image should be first element to be rendered hence used sapUxAPObjectPageHeaderObjectImage class to put Image border-->
								<VBox id="NoImageExtensionFacet" class="sapUxAPObjectPageHeaderObjectImage sapSmartTemplatesObjectPageHeaderImage" >
									<core:ExtensionPoint name="NoImageExtensionFacet|{entitySet>name}"/>
								</VBox>
							</template:if>
						</template:else>
					</template:if>
				</template:with>
			</template:if>

		
			<template:if test="{entityType>com.sap.vocabularies.UI.v1.HeaderFacets}">
				<template:then>
				<template:with path="parameter>/manifest/sap.ui5/extends/extensions/sap.ui.viewExtensions/sap.suite.ui.generic.template.ObjectPage.view.Details"
							   var="manifestViewExtensions">
					<template:with path="entityType>com.sap.vocabularies.UI.v1.HeaderFacets"
								   var="headerFacets">
						<template:with path="parameter>/variables" helper="AH.getNewVariable" var="isHeaderFacet">
						<template:if test="{:= ${isHeaderFacet>}.set(true)}"/>
						<template:repeat list="{headerFacets>}" var="headerFacet">
							<template:if test="{parameter>/settings/simpleHeaderFacets}">
								<template:then>
									<!-- New code for simple header facets -->
									<template:if
											test="{= ${headerFacet>Target/AnnotationPath}.indexOf('com.sap.vocabularies.UI.v1.Identification') >= 0}">
										<template:then>
											<template:with path="headerFacet>Target"
														   helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="form">
												<template:repeat list="{form>}" var="dataField">
													<template:if
															test="{= ${dataField>RecordType} !== 'com.sap.vocabularies.UI.v1.DataFieldForAction'}">
														<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}, {path: 'dataField>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointBeforeSimpleHeaderFacetExists' }">
															<HBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path: 'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}::BeforeIdentificationExtension">
																<core:ExtensionPoint name="BeforeSimpleHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path:'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}" />
															</HBox>
														</template:if>
														<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}, {path: 'dataField>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointReplaceSimpleHeaderFacetExists' }">
															<template:then>
																<HBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path: 'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}::ReplaceIdentificationExtension">
																	<core:ExtensionPoint name="ReplaceSimpleHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path:'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}" />
																</HBox>
															</template:then>
															<template:else>
																<HBox class="sapSmartTemplatesObjectPageHeaderForm sapSmartTemplatesObjectPageHeaderFormBox">
																	<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.HeaderFormDataField"
																					type="XML"/>
																</HBox>
															</template:else>
														</template:if>
														<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}, {path: 'dataField>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointAfterSimpleHeaderFacetExists' }">
															<HBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path: 'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}::AfterIdentificationExtension">
																<core:ExtensionPoint name="AfterSimpleHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path:'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}" />
															</HBox>
														</template:if>
													</template:if>
												</template:repeat>
											</template:with>
										</template:then>
										<template:elseif
												test="{= ${headerFacet>Target/AnnotationPath}.indexOf('com.sap.vocabularies.UI.v1.FieldGroup') >= 0}">
											<template:with path="headerFacet>Target"
														   helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="form">
												<template:repeat list="{form>Data}" var="dataField">
													<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}, {path: 'dataField>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointBeforeSimpleHeaderFacetExists' }">
														<HBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path: 'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}::BeforeFGExtension">
															<core:ExtensionPoint name="BeforeSimpleHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path:'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}" />
														</HBox>
													</template:if>
													<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}, {path: 'dataField>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointReplaceSimpleHeaderFacetExists' }">
														<template:then>
															<HBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path: 'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}::ReplaceFGExtension">
																<core:ExtensionPoint name="ReplaceSimpleHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path:'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}" />
															</HBox>
														</template:then>
														<template:else>
															<HBox class="sapSmartTemplatesObjectPageHeaderForm sapSmartTemplatesObjectPageHeaderFormBox">
																<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.HeaderFormDataField"
																				type="XML"/>
															</HBox>
														</template:else>
													</template:if>
													<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}, {path: 'dataField>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointAfterSimpleHeaderFacetExists' }">
														<HBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path: 'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}::AfterFGExtension">
															<core:ExtensionPoint name="AfterSimpleHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path:'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataField'}" />
														</HBox>
													</template:if>
												</template:repeat>
											</template:with>
										</template:elseif>
										<template:elseif
												test="{= ${headerFacet>Target/AnnotationPath}.indexOf('com.sap.vocabularies.UI.v1.DataPoint') >= 0}">
											<template:with path="headerFacet>Target"
														   helper="sap.ui.model.odata.AnnotationHelper.resolvePath"
														   var="dataPoint">
												<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}, {path: 'dataPoint>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointBeforeSimpleHeaderFacetExists' }">
													<HBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path: 'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}::BeforeDPExtension">
														<core:ExtensionPoint name="BeforeSimpleHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path:'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}" />
													</HBox>
												</template:if>
												<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}, {path: 'dataPoint>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointReplaceSimpleHeaderFacetExists' }">
													<template:then>
														<HBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path: 'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}::ReplaceDPExtension">
															<core:ExtensionPoint name="ReplaceSimpleHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path:'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}" />
														</HBox>
													</template:then>
													<template:else>
														<HBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path:'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}::DataPoint"
															  displayInline="true"
															  class="sapSmartTemplatesObjectPageHeaderForm"
															  binding="{parts: [{path: 'headerFacet>Target'}, {path: 'entitySet>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getNavigationPathWithExpand'}">
															<HBox>
																<core:Fragment
																	fragmentName="sap.suite.ui.generic.template.fragments.HeaderDataPointContent"
																	type="XML"/>
															</HBox>
														</HBox>
													</template:else>
												</template:if>
												<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}, {path: 'dataPoint>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointAfterSimpleHeaderFacetExists' }">
													<HBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path: 'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}::AfterDPExtension">
														<core:ExtensionPoint name="AfterSimpleHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::{path:'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}" />
													</HBox>
												</template:if>
											</template:with>
										</template:elseif>
									</template:if>
								</template:then>
								<template:else>
									<!-- Previous code for standard header facets-->
									<template:if
											test="{= ${headerFacet>RecordType}.indexOf('com.sap.vocabularies.UI.v1.ReferenceFacet') >= 0 }">
										<template:then>
											<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointBeforeHeaderFacetExists'}">
												<VBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::BeforeReferenceExtension" >
													<core:ExtensionPoint name="BeforeHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}" />
												</VBox>
											</template:if>
											<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointReplaceHeaderFacetExists'}">
												<template:then>
													<VBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::ReplaceReferenceExtension" >
														<core:ExtensionPoint name="ReplaceHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}" />
													</VBox>
												</template:then>
												<template:else>
													<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.HeaderFacet"
																	type="XML"/>
												</template:else>
											</template:if>
											<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointAfterHeaderFacetExists'}">
												<VBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::AfterReferenceExtension" >
													<core:ExtensionPoint name="AfterHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}" />
												</VBox>
											</template:if>
										</template:then>
										<template:elseif
												test="{= ${headerFacet>RecordType}.indexOf('com.sap.vocabularies.UI.v1.CollectionFacet') >= 0 }">
											<VBox displayInline="true" class="sapSmartTemplatesObjectPageHeaderCollection">
												<template:repeat list="{headerFacet>Facets}"
																 var="headerFacet">
													<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointBeforeHeaderFacetExists'}">
														<VBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::BeforeCollectionExtension" >
															<core:ExtensionPoint name="BeforeHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}" />
														</VBox>
													</template:if>
													<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointReplaceHeaderFacetExists'}">
														<template:then>
															<VBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::ReplaceCollectionExtension" >
																<core:ExtensionPoint name="ReplaceHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}" />
															</VBox>
														</template:then>
														<template:else>
															<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.HeaderFacet"
																			type="XML"/>
														</template:else>
													</template:if>
													<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'headerFacet>'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointAfterHeaderFacetExists'}">
														<VBox id="header::{path: 'headerFacet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::AfterCollectionExtension" >
															<core:ExtensionPoint name="AfterHeaderFacet|{entitySet>name}|{path: 'headerFacet>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}" />
														</VBox>
													</template:if>
												</template:repeat>
											</VBox>
										</template:elseif>
									</template:if>
								</template:else>
							</template:if>
						</template:repeat>
						</template:with>
					</template:with>
				</template:with>
				</template:then>
				<template:else>
					<template:with path="parameter>/manifest/sap.ui5/extends/extensions/sap.ui.viewExtensions/sap.suite.ui.generic.template.ObjectPage.view.Details"
									var="manifestViewExtensions">
						<template:repeat
								list="{path:'entityType>', filters: {path: '@sapui.name', operator: 'StartsWith', value1: 'com.sap.vocabularies.UI.v1.DataPoint'}}"
								var="dataPoint">
							<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'dataPoint>'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointBeforeHeaderDataPointExists'}">
								<l:VerticalLayout
									id="dataPoint::{path: 'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}::BeforeDataPointExtension">
									<core:ExtensionPoint name="BeforeHeaderDataPoint|{entitySet>name}|{path: 'dataPoint>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}" />
								</l:VerticalLayout>
							</template:if>
							<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'dataPoint>'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointReplaceHeaderDataPointExists'}">
								<template:then>
									<l:VerticalLayout
										id="dataPoint::{path: 'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}::ReplaceDataPointExtension">
										<core:ExtensionPoint name="ReplaceHeaderDataPoint|{entitySet>name}|{path: 'dataPoint>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}" />
									</l:VerticalLayout>
								</template:then>
								<template:else>
									<l:VerticalLayout
											id="dataPoint::{path: 'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}"
											class="sapSmartTemplatesObjectPageDataPoint">
										<Label id="dataPoint::{path: 'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}::Label"
											   labelFor="dataPoint::{path: 'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}::Value"
											   text="{path: 'dataPoint>Title', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.formatWithExpandSimple'}"
											   class="sapSmartTemplatesObjectPageDataPointLabel"/>
										<sfi:SmartField
												id="dataPoint::{path: 'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}::Value"
												contextEditable="false" uomEditable="false" enabled="true" clientSideMandatoryCheck="false"
												value="{parts: [{path: 'dataPoint>Value'}, {path: 'entitySet>'}, {path: 'dataPoint>ValueFormat'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.formatWithExpandSimplePath'}"
												class="sapSmartTemplatesObjectPageDataPointValue {= ${dataPoint>Value/EdmType} === 'Edm.Byte' || ${dataPoint>Value/EdmType} === 'Edm.Decimal' || ${dataPoint>Value/EdmType} === 'Edm.Double' ||  ${dataPoint>Value/EdmType} === 'Edm.Float' ||  ${dataPoint>Value/EdmType} === 'Edm.Int16' ||  ${dataPoint>Value/EdmType} === 'Edm.Int32' || ${dataPoint>Value/EdmType} === 'Edm.Int64' ||  ${dataPoint>Value/EdmType} === 'Edm.SByte' ? 'sapSmartTemplatesObjectPageDataPointNumericValue' : 'sapSmartTemplatesObjectPageDataPointTextualValue'}"
												textInEditModeSource="{path: 'dataFieldValue>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.setValidationForValueList'}"
												fetchValueListReadOnly="{parts:[{path: 'parameter>/entityType'},{path: 'dataPoint>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getValueListReadOnly'}">
											<sfi:semanticObjectController>
												<smartlink:SemanticObjectController beforePopoverOpens="._templateEventHandlers.onBeforeSemanticObjectLinkPopoverOpens"
																					navigationTargetsObtained="._templateEventHandlers.onSemanticObjectLinkNavigationTargetObtained"
													                                beforeNavigationCallback="._templateEventHandlers.onBeforeSemanticObjectLinkNavigationCallback"
																					forceLinkRendering="{parts: [{path: 'entitySet>'},{path: 'parameter>/templateSpecific/targetEntities'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.hasQuickViewFacet'}"/>
											</sfi:semanticObjectController>
											<template:if test="{= ${dataPoint>Criticality} }">
												<sfi:controlProposal>
													<sfi:ControlProposal>
														<sfi:objectStatus>
															<sfi:ObjectStatus
																	criticality="{path: 'dataPoint>Criticality', formatter: 'sap.ui.model.odata.AnnotationHelper.simplePath'}"
																	criticalityRepresentationType="WithoutIcon"/>
														</sfi:objectStatus>
													</sfi:ControlProposal>
												</sfi:controlProposal>
											</template:if>
										</sfi:SmartField>
									</l:VerticalLayout>
								</template:else>
							</template:if>
							<template:if test="{parts: [{path: 'entitySet>name'}, {path: 'dataPoint>'}, {path: 'manifestViewExtensions>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointAfterHeaderDataPointExists'}">
								<l:VerticalLayout
									id="dataPoint::{path: 'dataPoint>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}::AfterDataPointExtension">
									<core:ExtensionPoint name="AfterHeaderDataPoint|{entitySet>name}|{path: 'dataPoint>' , formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromDataPoint'}" />
								</l:VerticalLayout>
							</template:if>
						</template:repeat>
					</template:with>
				</template:else>
			</template:if>
	
	

</core:FragmentDefinition>
